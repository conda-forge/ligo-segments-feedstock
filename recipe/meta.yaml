{% set name = "ligo-segments" %}
{% set version = "1.4.0" %}

# avoid circular imports that would break migrations
{% set migrating = False %}
{% set migrating = True %}  # [win]
{% set migrating = True %}  # [not x86_64]
{% set migrating = True %}  # [python_impl != 'cpython']
{% set migrating = True %}  # [py >= 310]

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  sha256: e072a844713c5b02efdcaf5bfe4c3a8cd9ef225b08cfd3202a4e185e0f71f5dc
  patches:
    # avoid any imports of LAL on Windows
    - no-lal.patch  # [win]

build:
  number: 3
  script: {{ PYTHON }} -m pip install . -vv
  ignore_run_exports:
    - m2w64-gcc-libs  # [win]
    - pypy3.7

requirements:
  build:
    - python                              # [build_platform != target_platform]
    - cross-python_{{ target_platform }}  # [build_platform != target_platform]
    - {{ compiler('c') }}  # [not win]
    - {{ compiler('m2w64_c') }}  # [win]
  host:
    - libpython  # [win]
    - pip
    - python
    - setuptools
  run:
    - python
    - six

test:
  source_files:
    - test/
  requires:
    - pip
    {% if not migrating %}
    - make
    - python-lal
    {% endif %}
  commands:
    # check requirements
    - python -m pip check
    # run basic sanity test everywhere
    - python -c "from ligo.segments import segment;
      a = segment(1, 2);
      b = segment(2, 3);
      c = segment(5, 6);
      assert a.connects(b);
      assert a in (a + b);
      assert (a + b).intersects(b);
      assert a.disjoint(c);
      "
    # run tests (only where we can install LAL)
    {% if not migrating %}
    - make -C test check
    {% endif %}

about:
  home: https://git.ligo.org/lscsoft/ligo-segments/
  dev_url: https://git.ligo.org/lscsoft/ligo-segments.git
  doc_url: https://lscsoft.docs.ligo.org/ligo-segments/
  license: GPL-3.0-or-later
  license_family: GPL
  license_file: LICENSE
  summary: Representations of semi-open intervals
  description: |
    This module defines the segment and segmentlist objects, as well as the
    infinity object used to define semi-infinite and infinite segments.

extra:
  recipe-maintainers:
    - duncanmmacleod
